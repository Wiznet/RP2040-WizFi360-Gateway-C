diff --git a/WiFi/WizFi360/WiFi_WizFi360.c b/WiFi/WizFi360/WiFi_WizFi360.c
index 714c233..9ae7f6f 100644
--- a/WiFi/WizFi360/WiFi_WizFi360.c
+++ b/WiFi/WizFi360/WiFi_WizFi360.c
@@ -53,6 +53,21 @@
 #include "WiFi_WizFi360.h"
 #include "WiFi_WizFi360_Os.h"
 
+
+/* ------------------------------------------------------------------------
+ * Wizent added
+ * Station Connection Event Delcaration
+ * : to update/delete Mac Address for distingishing IoT Devices
+ * ------------------------------------------------------------------------ */
+void update_connected_mac(uint8_t macAddr[6]);
+void update_linked_mac(int clientSock);
+int update_unliked_mac(uint8_t macAddr[6]);
+
+
+uint8_t g_conn_mac[6] = {0, };	  // Station's mac addr connected to AP
+uint8_t g_link_mac[5][6] = {0, }; // Client's mac addr connected to Server, [backlog is max 4]x[mac address size]
+/* End of Wizent added--------------------------------------------------------*/
+
 /* Driver version */
 #define ARM_WIFI_DRV_VERSION ARM_DRIVER_VERSION_MAJOR_MINOR(1, 8)
 
@@ -61,8 +76,11 @@
 /* Number of supported simultaneus connections */
 #define WIFI_SOCKET_NUM         5
 
+/*
+*  Wizent: modified to reference for Server Application
+*  Origin code: static WIFI_SOCKET Socket[WIFI_SOCKET_NUM]; */
 /* Array of sockets */
-static WIFI_SOCKET Socket[WIFI_SOCKET_NUM];
+WIFI_SOCKET Socket[WIFI_SOCKET_NUM]; 
 
 /* Driver control block */
 static WIFI_CTRL  WIFI_Ctrl;
@@ -272,6 +290,7 @@ void AT_Notify (uint32_t event, void *arg) {
       ex = AT_Resp_CtrlConn (&conn_id);
 
       if (ex == 0) {
+        //Wiznet, NOT use SYSMSG_CUR => <link_id>, CONNECT
         /* Set connection id as used */
         ConnId_Accept (conn_id);
 
@@ -300,7 +319,23 @@ void AT_Notify (uint32_t event, void *arg) {
               /* Set pointer to server socket */
               sock = &Socket[n];
 
+              /*After Initialized
+                socket[0].state is SOCKET_STATE_SERVER
+                socket[1].state is SOCKET_STATE_LISTEN
+                socket[2].state is SOCKET_STATE_LISTEN
+                socket[3].state is SOCKET_STATE_LISTEN
+                socket[4].state is SOCKET_STATE_LISTEN
+
+                After 1 client connected
+                socket[0].state is SOCKET_STATE_SERVER
+                socket[1].state is SOCKET_STATE_CONNECTED
+                socket[2].state is SOCKET_STATE_LISTEN
+                socket[3].state is SOCKET_STATE_LISTEN
+                socket[4].state is SOCKET_STATE_LISTEN */
+                          
               /* Find available backlog socket */
+              //reason: AT_NOTIFY_CONNECTION_OPEN
+              //bug or need to optimize: Second Client <link_id>, CPNNECT Can't update conn_id
               do {
                 n = Socket[n].backlog;
 
@@ -365,14 +400,17 @@ void AT_Notify (uint32_t event, void *arg) {
   else if (event == AT_NOTIFY_STATION_CONNECTED) {
     /* Station connects to the local AP */
     ex = AT_Resp_StaMac (mac);
+    /* Wizent modified, to update client's mac addr notifying */
+    update_connected_mac(mac);
+    //pCtrl->cb_event (ARM_WIFI_EVENT_AP_CONNECT, mac);
 
-    pCtrl->cb_event (ARM_WIFI_EVENT_AP_CONNECT, mac);
   }
   else if (event == AT_NOTIFY_STATION_DISCONNECTED) {
     /* Station disconnects from the local AP */
+    /* Wizent modified, to update client's mac addr notifying */
     ex = AT_Resp_StaMac (mac);
-
-    pCtrl->cb_event (ARM_WIFI_EVENT_AP_DISCONNECT, mac);
+    update_unliked_mac(mac);	
+    //pCtrl->cb_event (ARM_WIFI_EVENT_AP_DISCONNECT, mac);
   }
   else if (event == AT_NOTIFY_CONNECTED) {
     /* Local station connected to an AP */
@@ -791,6 +829,7 @@ static int32_t ARM_WIFI_PowerControl (ARM_POWER_STATE state) {
           if (ex == 0) {
             /* Configure system messages */
             ex = AT_Cmd_SysMessages (3U);
+            //Wiznet, AT+SYSMSG_CUR is Not now supported on WizF360
 
             if (ex == 0) {
               /* Wait until response arrives */
@@ -1773,7 +1812,8 @@ static int32_t ARM_WIFI_Activate (uint32_t interface, const ARM_WIFI_CONFIG_t *c
               ap_cfg.ecn = config->security;
 
               /* Optional parameters, set default values */
-              ap_cfg.max_conn  = 8; //Set maximum supported
+              //ap_cfg.max_conn  = 8; //Set maximum supported
+              ap_cfg.max_conn  = 4;   //Wiznet, Set maximum supported, WizFi360 supports max. 4
               ap_cfg.ssid_hide = 0; //(0:default)
 
               ex = AT_Cmd_ConfigureAP (AT_CMODE_SET, &ap_cfg);
@@ -1781,7 +1821,9 @@ static int32_t ARM_WIFI_Activate (uint32_t interface, const ARM_WIFI_CONFIG_t *c
 
             case 2:
               /* Set access point MAC (must be different from station) */
-              ex = AT_Cmd_AccessPointMAC (AT_CMODE_SET, pCtrl->options.ap_mac);
+              //Wiznet,
+              //No need to setup Mac addr, if you need it, you can do this
+              //ex = AT_Cmd_AccessPointMAC (AT_CMODE_SET, pCtrl->options.ap_mac);
               break;
 
             case 3:
@@ -4645,3 +4687,47 @@ static void ConnId_Free  (uint32_t conn_id) {
 static void ConnId_Accept (uint32_t conn_id) {
   pCtrl->conn_id |= (1U << conn_id);
 }
+
+
+/* -------------------------------------------------------------------
+ * Wizent added
+ * Station Connection Event Function
+ * : to update/delete Mac Address for distingishing IoT Devices
+ * ------------------------------------------------------------------
+ */
+void update_connected_mac(uint8_t macAddr[6])
+{
+  memcpy(g_conn_mac, macAddr, 6U);
+}
+
+void update_linked_mac(int clientSock)
+{
+  memcpy(g_link_mac[clientSock], g_conn_mac, sizeof(g_conn_mac));
+}
+
+int update_unliked_mac(uint8_t macAddr[6])
+{
+  int i, j, c = 0;
+  for(i=0;i<5;i++)
+  {
+    c = 0;
+    for(j=0; j<6; j++)
+    {
+      if(g_link_mac[i][j] != macAddr[j])
+      {
+      	break;
+      }
+      else 
+      {
+        c++;
+        if (c >= 5)
+        {
+        	memset(g_link_mac[i], 0x00, 6U);
+        	//return 1;
+        }
+      	continue;
+      }
+    }
+  }
+ }
+
diff --git a/WiFi/WizFi360/WiFi_WizFi360.h b/WiFi/WizFi360/WiFi_WizFi360.h
index ea0dc45..d9d05ff 100644
--- a/WiFi/WizFi360/WiFi_WizFi360.h
+++ b/WiFi/WizFi360/WiFi_WizFi360.h
@@ -41,7 +41,8 @@
 
 /* Connection open timeout [ms] (default) */
 #ifndef WIFI_CONNOPEN_TIMEOUT
-#define WIFI_CONNOPEN_TIMEOUT       (20000)
+//#define WIFI_CONNOPEN_TIMEOUT       (20000)    //Wiznet, modified
+#define WIFI_CONNOPEN_TIMEOUT       (10000)
 #endif
 
 /* Socket accept timeout */
@@ -56,7 +57,9 @@
 
 /* Access point default channel (used when channel not specified in Activate) */
 #ifndef WIFI_AP_CHANNEL
-#define WIFI_AP_CHANNEL             (2)
+//#define WIFI_AP_CHANNEL             (2)    //Wiznet, modified
+#define WIFI_AP_CHANNEL             (1)
+
 #endif
 
 /* AT response echo enable/disable */
diff --git a/WiFi/WizFi360/WizFi360.c b/WiFi/WizFi360/WizFi360.c
index 270d1cb..4a4f5b8 100644
--- a/WiFi/WizFi360/WizFi360.c
+++ b/WiFi/WizFi360/WizFi360.c
@@ -102,10 +102,14 @@ static STRING_LIST_t List_PlusResp[] = {
   { "CIPSERVERMAXCONN" },
   { "RST"              },
   { "GMR"              },
-  { "LINK_CONN"        },
+  //{ "LINK_CONN"        }, //Wiznet: WizFi360 use CONNECT
+  { "CONNECT"          },
   { "STA_CONNECTED"    },
   { "STA_DISCONNECTED" },
   { "SLEEP"            },
+
+  { "RESTORE"          },   //Wiznet: added for Factory Reset WizFi360
+
   { "E"                },
   { ""                 }
 };
@@ -142,10 +146,13 @@ typedef enum {
   CMD_CIPSERVERMAXCONN,
   CMD_RST,
   CMD_GMR,
-  CMD_LINK_CONN,
+  CMD_LINK_CONN,          //Wiznet: value is 30, WizFi360 use CONNECT
   CMD_STA_CONNECTED,
   CMD_STA_DISCONNECTED,
   CMD_SLEEP,
+
+  CMD_RESTORE,            //Wiznet: added WizFi360 Factory Reset
+  
   CMD_ECHO        = 0xFD, /* Command Echo                 */
   CMD_TEST        = 0xFE, /* AT startup (empty command)   */
   CMD_UNKNOWN     = 0xFF  /* Unknown or unhandled command */
